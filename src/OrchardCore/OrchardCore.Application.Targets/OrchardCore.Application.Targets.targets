<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
    This file is packaged with "OrchardCore.Application.Targets.nupkg" in "./build" such that any
    Application that references it will embedd in its assembly a list of the referenced modules.
  -->

  <Target Name="EmbeddModuleNames" AfterTargets="AfterResolveReferences">

    <ItemGroup>
      <ModuleProjectReferences
        Include="@(_MSBuildProjectReferenceExistent)"
        Condition="Exists('%(RootDir)%(Directory)Module.txt') Or Exists('%(RootDir)%(Directory)obj\Module.txt') Or
                   Exists('%(RootDir)%(Directory)Theme.txt') Or Exists('%(RootDir)%(Directory)obj\Theme.txt')" />
    </ItemGroup>

    <ItemGroup>
      <ModuleProjectNames Include="%(ModuleProjectReferences.FileName)" />
      <ModuleNames Include="@(ModulePackageNames);@(ModuleProjectNames)" />
    </ItemGroup>

    <WriteLinesToFile
      File="obj\module.names.map"
      Lines="@(ModuleNames)"
      Condition="'@(ModuleNames)' != ''"
      Overwrite="true"
      Encoding="utf-8"
      ContinueOnError="true" />

    <ItemGroup>
      <EmbeddedResource Include="obj\module.names.map">
        <Link>module.names.map</Link>
      </EmbeddedResource>
    </ItemGroup>

  </Target>

  <Target Name="CompileModuleRazorFiles" BeforeTargets="_ResolveInputArguments">

    <ItemGroup>
      <ModuleProjectReferences
        Include="@(_MSBuildProjectReferenceExistent)"
        Condition="Exists('%(RootDir)%(Directory)Module.txt') Or Exists('%(RootDir)%(Directory)obj\Module.txt') Or
                   Exists('%(RootDir)%(Directory)Theme.txt') Or Exists('%(RootDir)%(Directory)obj\Theme.txt')" />
    </ItemGroup>

    <ItemGroup>
      <ModuleProjectRazorFiles Include="%(ModuleProjectReferences.RootDir)%(Directory)**\*.cshtml">
        <ProjectName>%(Filename)</ProjectName>
      </ModuleProjectRazorFiles>
    </ItemGroup>

    <Copy
      SourceFiles="@(ModulePackageRazorFiles)"
      DestinationFolder="Modules\%(RecursiveDir)"
      Condition="'@(ModulePackageRazorFiles)' != ''"
      ContinueOnError="true" />

    <Copy
      SourceFiles="@(ModuleProjectRazorFiles)"
      DestinationFolder="Modules\%(ProjectName)\%(RecursiveDir)"
      Condition="'@(ModuleProjectRazorFiles)' != ''"
      ContinueOnError="true" />

    <ItemGroup Condition="'@(MvcRazorFilesToCompile)' == ''">
      <MvcModulesRazorFiles Include="Modules\**\*.cshtml" />
      <MvcContentRazorFiles Include="@(Content)" Condition="'%(Extension)'=='.cshtml'" />
      <MvcRazorFilesToCompile Include="@(MvcContentRazorFiles);@(MvcModulesRazorFiles)" />
    </ItemGroup>
  </Target>

  <Target Name="CleanModuleRazorFilesAfterCompile" AfterTargets="_MvcRazorPrecompile" Condition="Exists('Modules')">
    <ItemGroup><ModuleRazorFilesToCleanAfterCompile Include="Modules\**" /></ItemGroup>
    <Delete Files="@(ModuleRazorFilesToCleanAfterCompile)" ContinueOnError="true" />
    <RemoveDir Directories="Modules\%(ModuleRazorFilesToCleanAfterCompile.RecursiveDir);Modules" ContinueOnError="true" />
  </Target>

  <Target Name="CleanModuleRazorFilesAfterBuild" AfterTargets="Build;Clean" Condition="Exists('Modules')">
    <ItemGroup><ModuleRazorFilesToCleanAfterBuild Include="Modules\**" /></ItemGroup>
    <Delete Files="@(ModuleRazorFilesToCleanAfterBuild)" ContinueOnError="true" />
    <RemoveDir Directories="Modules\%(ModuleRazorFilesToCleanAfterBuild.RecursiveDir);Modules" ContinueOnError="true" />
  </Target>

  <PropertyGroup>
    <MvcRazorExcludeViewFilesFromPublish>false</MvcRazorExcludeViewFilesFromPublish>
  </PropertyGroup>

</Project>