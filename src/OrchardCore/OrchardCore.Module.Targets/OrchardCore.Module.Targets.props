<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
    This file is packaged with "OrchardCore.Module.Targets.nupkg" in "./build" such that any
    Module that references it will embedd in its assembly all its static assets.
  -->

  <PropertyGroup>
    <ModuleManifest>Name: $(MSBuildProjectName)</ModuleManifest>
    <ModuleAssetExcludes>**\*.cs;*.csproj*;obj\**;bin\**;Assets.json;Assets\**;Properties\**;*.props;*.targets;**/.*/**</ModuleAssetExcludes>
    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
    <ModuleType Condition="'$(ModuleType)' == ''">Module</ModuleType>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Include="**\*" Exclude="$(ModuleAssetExcludes)" />
  </ItemGroup>

  <Target Name="EmbeddModuleAssets" BeforeTargets="BeforeBuild">

    <RemoveDuplicates Inputs="@(EmbeddedResource)">
      <Output TaskParameter="Filtered" ItemName="ModuleAssetFiles"/>
    </RemoveDuplicates>

    <ItemGroup>
      <ModuleAssets Condition="'%(ModuleAssetFiles.Link)' == ''"
        Include="%(ModuleAssetFiles.FullPath)|Modules\$(MSBuildProjectName)\%(ModuleAssetFiles.RelativeDir)%(Filename)%(Extension)" />

      <ModuleAssets Condition="'%(ModuleAssetFiles.Link)' != ''"
        Include="%(ModuleAssetFiles.FullPath)|Modules\$(MSBuildProjectName)\%(ModuleAssetFiles.Link)" />

      <ModuleAssets Include="Modules\$(MSBuildProjectName)\$(ModuleType).txt" Condition="!Exists('$(ModuleType).txt')" />
    </ItemGroup>

    <WriteLinesToFile
      File="obj\module.assets.map"
      Lines="@(ModuleAssets)"
      Condition="'@(ModuleAssets)' != ''"
      Overwrite="true"
      Encoding="utf-8"
      ContinueOnError="true" />

    <Message Text="Generating manifest file: $(MSBuildProjectName)" Importance="high" Condition="!Exists('$(ModuleType).txt')" />

    <WriteLinesToFile
      File="obj\$(ModuleType).txt"
      Lines="$(ModuleManifest)"
      Condition="!Exists('$(ModuleType).txt')"
      Overwrite="true"
      Encoding="utf-8"
      ContinueOnError="true" />

    <ItemGroup>
      <EmbeddedResource Remove="@(EmbeddedResource)" />
      <EmbeddedResource Include="@(ModuleAssetFiles)" />
      <EmbeddedResource Update="@(EmbeddedResource)" Condition="'%(EmbeddedResource.Link)' == ''">
        <LogicalName>$([System.String]::new('$(MSBuildProjectName)\%(RelativeDir)%(FileName)%(Extension)').Replace('\', '.').Replace('/', '.'))</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="obj\module.assets.map">
        <Link>module.assets.map</Link>
      </EmbeddedResource>
      <EmbeddedResource Include="obj\$(ModuleType).txt" Condition="!Exists('$(ModuleType).txt')">
        <Link>$(ModuleType).txt</Link>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

  <Target Name="UpdateModuleAssets" AfterTargets="CreateManifestResourceNames">
    <ItemGroup>
      <EmbeddedResource Update="@(EmbeddedResource)" Condition="'%(EmbeddedResource.WithCulture)' == 'true'">
        <WithCulture>false</WithCulture>
        <Culture></Culture>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

  <!-- Adds a custom .props file to the generated module package -->

  <ItemGroup>
    <None Include="$(MSBuildThisFileDirectory)Package.Build.props" Pack="true">
      <PackagePath>build\$(TargetFramework)\$(PackageId).props</PackagePath>
    </None>
    <None Include="**\*.cshtml" Pack="true">
      <PackagePath>assets\$(PackageId)\</PackagePath>
    </None>
  </ItemGroup>

</Project>
