<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
    This file is packaged with "OrchardCore.Module.Targets.nupkg" in "./build" such that any
    Module that references it will embedd in its assembly all its static assets.
  -->

  <PropertyGroup>
    <ModuleManifest>Name: $(MSBuildProjectName)</ModuleManifest>
    <ExcludedFiles>**\*.cs;*.csproj*;obj\**;bin\**;Assets.json;Assets\**;Properties\**;*.props;*.targets;.vs\**</ExcludedFiles>
    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
    <ModuleType Condition="'$(ModuleType)' == ''">Module</ModuleType>
  </PropertyGroup>

  <ItemGroup>
    <ModuleAssetFiles Include="**\*" Exclude="$(ExcludedFiles)" />
    <ModuleAssetsWithoutCultureId Include="@(ModuleAssetFiles)" Exclude="**\*.??.*" />
    <EmbeddedResource Include="@(ModuleAssetsWithoutCultureId)" />
  </ItemGroup>

  <Target Name="EmbeddModuleAssetFiles" AfterTargets="AfterResolveReferences">
    <ItemGroup>
      <ModuleAssets Include="Modules\$(MSBuildProjectName)\%(ModuleAssetFiles.RecursiveDir)%(Filename)%(Extension)" />
      <ModuleAssets Include="Modules\$(MSBuildProjectName)\$(ModuleType).txt" Condition="!Exists('$(ModuleType).txt')" />
    </ItemGroup>

    <WriteLinesToFile
      File="obj\module.assets.map"
      Lines="$(MSBuildProjectDirectory);@(ModuleAssets)"
      Condition="'@(ModuleAssets)' != ''"
      Overwrite="true"
      Encoding="utf-8"
      ContinueOnError="true" />

    <Message Text="Generating manifest file: $(MSBuildProjectName)" Importance="high" Condition="!Exists('$(ModuleType).txt')" />

    <WriteLinesToFile
      File="obj\$(ModuleType).txt"
      Lines="$(ModuleManifest)"
      Condition="!Exists('$(ModuleType).txt')"
      Overwrite="true"
      Encoding="utf-8"
      ContinueOnError="true" />

    <ItemGroup>
      <ModuleAssetsWithCultureId Include="@(ModuleAssetFiles)" Exclude="@(ModuleAssetsWithoutCultureId)"  />
    </ItemGroup>

    <Copy
      SourceFiles="@(ModuleAssetsWithCultureId)"
      DestinationFiles="obj\hidden\%(RecursiveDir)%(Filename)%(Extension).hidden"
      ContinueOnError="true" />

    <RemoveDuplicates Inputs="@(EmbeddedResource)">
      <Output TaskParameter="Filtered" ItemName="DeduplicatedEmbeddedResource"/>
    </RemoveDuplicates>

    <ItemGroup>
      <EmbeddedResource Remove="@(EmbeddedResource)" />
      <EmbeddedResource Include="@(DeduplicatedEmbeddedResource)" />
      <EmbeddedResource Include="obj\hidden\**\*.hidden" />
      <EmbeddedResource Include="obj\module.assets.map">
        <Link>module.assets.map</Link>
      </EmbeddedResource>
      <EmbeddedResource Include="obj\$(ModuleType).txt" Condition="!Exists('$(ModuleType).txt')">
        <Link>$(ModuleType).txt</Link>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

  <Target Name="CleanModuleAssetHiddenFilesAfterBuild" AfterTargets="Build;Clean;">
    <RemoveDir Directories="obj\hidden" ContinueOnError="true" />
  </Target>

  <Target Name="CleanModuleAssetHiddenFilesAfterPack" AfterTargets="Pack">
    <RemoveDir Directories="obj\hidden" ContinueOnError="true" />
  </Target>

  <!-- Adds a custom .props file to the generated module package -->

  <ItemGroup>
    <None Include="$(MSBuildThisFileDirectory)Package.Build.props" Pack="true">
      <PackagePath>build\$(TargetFramework)\$(PackageId).props</PackagePath>
    </None>
    <None Include="**\*.cshtml" Pack="true">
      <PackagePath>assets\$(PackageId)\</PackagePath>
    </None>
  </ItemGroup>

</Project>
